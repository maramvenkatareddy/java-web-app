pipeline {

agent any

stages{
  stage('clone the code') {
    steps{
      git branch: 'training_branch', url: 'https://github.com/darinpope/java-web-app.git'
    }
  }
  stage('build the code') {
    tools {
      maven 'maven_3.6'
    }
    steps {
        withSonarQubeEnv('sonarqube_java') {
        sh "mvn clean package sonar:sonar -Dsonar.projectKey='Java_Web_App_1' -Dsonar.projectName='Java_Web_App_1'"
        }
    }
  }
  stage("Quality Gate") {
      steps {
        timeout(time: 5, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
    }
  }
  stage('jfrog') {
    steps {
        withCredentials([string(credentialsId: 'training_jfrog_id', variable: 'Token_jfrog')]) {
          sh "jf c add --access-token ${Token_jfrog} --url https://trial7lu07a.jfrog.io --artifactory-url https://trial7lu07a.jfrog.io/artifactory"
          sh 'jf rt u target/*.jar training_java_repo-libs-release/'
    }
  }
}
}
