pipeline {
    agent { label 'master' }
    triggers {
        pollSCM('* * * * *')
    }
    stages {
        stage('Clone the code from GitHub') {
            steps {
                git branch: 'sonar', url: 'https://github.com/maramvenkatareddy/java-web-app.git'
            }
        }
        stage('SonarQube analysis') {
              steps {
                script {
                  // requires SonarQube Scanner 2.8+
                  scannerHome = tool 'sonarQubeScanner-6.1.0'
                }
                withSonarQubeEnv('SonarQube Scanner') {
                  sh "${scannerHome}/bin/sonar-scanner"
                }
              }
        }
        stage('Build the code and SonarQube analysis') {
            steps {
                script {
                    def scannerHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                }
                withSonarQubeEnv('sonarqube') {
                    sh "mvn clean install sonar:sonar -Dsonar.projectKey=Java-web-key -Dsonar.host.url=http://98.70.73.200:9000/"
                }
            }
        }
        stage('Quality Gate') {
            steps {
                timeout(time: 30, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('Script') {
            steps {
                echo 'success'
            }
        }
    }
}
