node('master') {
    checkout scm
    environment {
        data_helper_repo_url = "https://github.com/maramvenkatareddy/node_js.git"
        platform_app_url = "https://github.com/maramvenkatareddy/java-web-app.git"
    }

    try {
        // Read the config file and set the environment
        property = readYaml file: "config.yaml"
        if (ENVIRONMENT == "qa") {
            config = property.qa
            echo "Config: ${config}"
        } else if (ENVIRONMENT == "prod") {
            config = property.prod
            echo "Config: ${config}"
        } else {
            error "ENVIRONMENT variable not set or invalid!"
        }
    } catch (Exception e) {
        error "Failed at reading config file. Error: ${e}"
    }

    try {
        // Debugging: echo the repository URLs
        echo "Data Helper Repo URL: ${env.data_helper_repo_url}"
        echo "Platform App Repo URL: ${env.platform_app_url}"

        // Clone Datahelper Repository
        stage('Clone Datahelper Repository') {
            dir('repo1') {
                echo "Cloning repository: ${env.data_helper_repo_url}"
                git branch: "main", url: "https://github.com/maramvenkatareddy/node_js.git"
                echo "Checked out Datahelper Repository"
                sh "ls'
            }
        }

        // Clone Platform Application Repository
        stage('Clone Platform Application Repository') {
            dir('repo2') {
                echo "Cloning repository: ${env.platform_app_url}"
                git branch: "main", url: "https://github.com/maramvenkatareddy/java-web-app.git"
                echo "Checked out Platform Application Repository"
            }
        }

        // Other stages go here...

    } catch (Exception e) {
        error "Pipeline failed with error: ${e}"
    }
}
