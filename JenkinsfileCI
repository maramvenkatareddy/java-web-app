pipeline {
    agent { label 'master' }
    triggers {
        pollSCM('* * * * *')
    }
    tools {
       jfrog 'jfrog-cli'
    }
    stages {
        stage('Clone the code from GitHub') {
            steps {
                git branch: 'sonar', url: 'https://github.com/maramvenkatareddy/java-web-app.git'
            }
        }
        stage('Build the code and SonarQube analysis') {
            steps {
                script {
                    def scannerHome = tool name: 'sonarQubeScanner-6.1.0', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                }
                withSonarQubeEnv('sonarqube') {
                    sh "mvn clean install sonar:sonar -Dsonar.projectKey=Java-web-key -Dsonar.host.url=http://98.70.73.200:9000/"
                }
            }
        }
        stage('Quality Gate') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    script {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Quality Gate failed: ${qualityGate.status}"
                        }
                    }
                }
            }
        }
        stage('jfrog-cli') {
            steps {
                script {
                    sh """
                        /var/lib/jenkins/tools/io.jenkins.plugins.jfrog.JfrogInstallation/jfrog-cli/jf -v
                        /var/lib/jenkins/tools/io.jenkins.plugins.jfrog.JfrogInstallation/jfrog-cli/jf c show
                        /var/lib/jenkins/tools/io.jenkins.plugins.jfrog.JfrogInstallation/jfrog-cli/jfrog rt upload "target/*.jar" "java-project-libs-release-local/" --server-id=artifactory
                    """
                }
            }
        }
        // stage('Deploy to Artifactory') {
         //   environment {
                // Define the target repository in Artifactory
          //      TARGET_REPO = 'java-peoject-libs-release-local'
          //  }
            
           // steps {
            //    script {
            //        try {
            //            def server = Artifactory.newServer url: 'https://jfrogvenkat3533.jfrog.io/artifactory', credentialsId: 'jfrog_id'
            //            def uploadSpec = """{
            //                "files": [
            //                    {
            //                        "pattern": "target/*.jar",
            //                        "target": "${TARGET_REPO}/"
            //                    }
            //                ]
            //            }"""
            //            
            //            server.upload(uploadSpec)
            //        } catch (Exception e) {
            //            error("Failed to deploy artifacts to Artifactory: ${e.message}")
            //        }
            //    }
            // }
        // } 
    }
}
